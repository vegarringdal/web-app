-- just code I play around with ....

CREATE TABLE drums (
    id     NUMBER
        GENERATED BY DEFAULT AS IDENTITY START WITH 1
    PRIMARY KEY,
    drumno VARCHAR(255) NOT NULL UNIQUE,
    text1  VARCHAR(255),
    text2  VARCHAR(255),
    text3  VARCHAR(50)
);

DROP VIEW v_drum

/

create view v_drum as select * from drums


/
CREATE OR REPLACE TRIGGER v_drums_trg_new INSTEAD OF
    INSERT OR UPDATE OR DELETE ON v_drum
    FOR EACH ROW
BEGIN
    dbms_output.put_line(:old.drumno ||' - ' || :new.drumno);
    dbms_output.put_line(:old.text1||' - ' || :new.text1);
    dbms_output.put_line(:old.text2||' - ' || :new.text2);
    dbms_output.put_line(:old.text3||' - ' || :new.text3);

    -- inserting
    IF inserting THEN
        INSERT INTO drums (
            drumno,
            text1,
            text2,
            text3
        ) VALUES (
            :new.drumno,
            :new.text1,
            :new.text2,
            :new.text3
        );

    END IF;

    -- updating
    IF updating THEN
        UPDATE drums
        SET
            drumno = :new.drumno,
            text1 = :new.text1,
            text2 = :new.text2,
            text3 = :new.text3
        where id = :old.id;
    END IF;
    
    -- deleting
    IF deleting THEN
        DELETE FROM drums
        where id = :old.id;
    END IF;
END;

/
SET SERVEROUTPUT ON;

insert into v_drum(drumno, text1) values('drum1', 't1');
insert into v_drum(drumno, text1) values('drum2', 't2');
insert into v_drum(drumno, text1) values('drum3', 't3');

/

update v_drum 
set text2 = 'wow'
where id = 2
